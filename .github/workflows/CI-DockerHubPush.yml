name: Java CI with Gradle

on:
  pull_request:
    branches: [ develop ]
  push:
    branches: [ develop ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write

    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.SUBMODULE_TOKEN }}
          submodules: true

      - name: JDK 17을 설치합니다.
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: gradlew 권한을 부여합니다.
        run: chmod +x gradlew

      - name: Gradle을 통해 빌드합니다.
        run: ./gradlew clean build

      - name: DockerHub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Docker 이미지 이름 설정
#        run: |
#          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
#          echo "IMAGE_NAME=fashion-forecast-prod" >> $GITHUB_ENV
#          else
#          echo "IMAGE_NAME=fashion-forecast-dev" >> $GITHUB_ENV
#          fi

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/fashion-forecast-dev .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fashion-forecast-dev:latest
